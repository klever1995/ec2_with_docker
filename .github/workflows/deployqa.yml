name: Docker CI/CD Pipeline - QA

on:
  push:
    branches:
      - qa  # Solo para cambios en la rama 'qa'

jobs:
  build-test-deploy:
    runs-on: self-hosted  # Usar un runner auto-hospedado, si no se puede usar 'ubuntu-latest'

    steps:
      # Paso 1: Checkout del código
      - name: Checkout code
        uses: actions/checkout@v2

      # Paso 2: Login a Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Paso 3: Construir la imagen Docker
      - name: Build and Push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/webapp:${{ github.sha }}

      # Paso 4: Despliegue en EC2 (Específico para la rama 'qa')
      - name: Deploy to EC2 instance
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST4_DNS }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            # Detener y eliminar contenedor anterior si existe
            docker stop webapp || true
            docker rm webapp || true
            # Descargar la imagen más reciente desde Docker Hub
            docker pull ${{ secrets.DOCKER_USERNAME }}/webapp:${{ github.sha }}
            # Ejecutar el contenedor en EC2
            docker run -d --name webapp -p 80:80 ${{ secrets.DOCKER_USERNAME }}/webapp:${{ github.sha }}
