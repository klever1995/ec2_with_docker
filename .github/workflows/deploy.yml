name: Build and Deploy to DockerHub

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  dockerize:
    name: Build Docker Image and Push to DockerHub
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Hacer checkout del código
      - name: Checkout the code
        uses: actions/checkout@v2

      # Paso 2: Configurar Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Paso 3: Iniciar sesión en Docker Hub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # DockerHub username
          password: ${{ secrets.DOCKER_PASSWORD }}  # DockerHub password or token

      # Paso 4: Construir la imagen Docker
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/myapp:latest .

      # Paso 5: Subir la imagen a Docker Hub
      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/myapp:latest

  deploy:
    name: Deploy to EC2 using Docker
    runs-on: ubuntu-latest
    needs: dockerize

    steps:
      # Paso 1: Hacer checkout del código
      - name: Checkout the code
        uses: actions/checkout@v2

      # Paso 2: Iniciar sesión en Docker Hub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Paso 3: Conectar con el servidor EC2 a través de SSH
      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DNS }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Actualizar el sistema
            sudo apt-get update -y
            sudo apt-get install -y docker.io

            # Detener el contenedor anterior si existe
            sudo docker stop myapp || true
            sudo docker rm myapp || true

            # Extraer la última imagen de Docker desde Docker Hub
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/myapp:latest

            # Correr el contenedor con la nueva imagen
            sudo docker run -d -p 80:80 --name myapp ${{ secrets.DOCKER_USERNAME }}/myapp:latest